/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package popupFrame;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.border.MatteBorder;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import java.text.NumberFormat;
import javax.swing.Timer;

/**
 *
 * @author Daniel
 */
public class UpdateUser extends javax.swing.JFrame {
    private int userID;
    private Timer redirectTimer;
    private static final int REDIRECT_DELAY = 2000;
    /**
     * Creates new form UpdateUser
     * @param userId
     */
    public UpdateUser(int userId) {
        userID = userId;
        user.SQLMethods method = new user.SQLMethods();
        this.setUndecorated(true);
        initComponents();
        int borderSize = 1;
        Color borderColor = Color.WHITE;
        MatteBorder border = new MatteBorder(borderSize, borderSize, borderSize, borderSize, borderColor);
        this.getRootPane().setBorder(border);
        List<Object[]> userData = method.readUserToBeUpdated(userId);
        for (Object[] user : userData) {
            IDTextField.setValue((int) user[0]);
            EmailTextField.setText((String) user[1]);
            PasswordField.setText((String) user[2]);
        }
    }
    
    public int getUserID(){
        return userID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddTasksContainer = new javax.swing.JPanel();
        TaskDetailsPanel = new javax.swing.JPanel();
        IDLabel = new javax.swing.JLabel();
        UpdateUserButton = new javax.swing.JButton();
        UpdateUserNotice = new javax.swing.JLabel();
        EmailTextField = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        PasswordLabel = new javax.swing.JLabel();
        NumberFormat integerFormat = NumberFormat.getIntegerInstance();
        NumberFormatter formatter = new NumberFormatter(integerFormat);
        formatter.setValueClass(Integer.class);
        formatter.setMinimum(1);
        formatter.setMaximum(2147483647);
        formatter.setAllowsInvalid(false);
        IDTextField = new javax.swing.JFormattedTextField();
        TasksPanelHeader = new javax.swing.JPanel();
        ExitButton = new javax.swing.JButton();
        FirstCircle = new customComponents.Circles(255, 95, 87);
        SecondCircle = new customComponents.Circles(255, 189, 41);
        ThirdCircle = new customComponents.Circles(38, 202, 63);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AddTasksContainer.setBackground(new java.awt.Color(21, 28, 26));

        TaskDetailsPanel.setBackground(new java.awt.Color(21, 28, 26));
        TaskDetailsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 51, 47)));
        TaskDetailsPanel.setFocusable(false);

        IDLabel.setForeground(new java.awt.Color(166, 166, 166));
        IDLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IDLabel.setText("ID");

        UpdateUserButton.setBackground(new java.awt.Color(255, 255, 51));
        UpdateUserButton.setForeground(new java.awt.Color(0, 0, 0));
        UpdateUserButton.setText("Update");
        UpdateUserButton.setBorderPainted(false);
        UpdateUserButton.setFocusPainted(false);
        UpdateUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateUserButtonActionPerformed(evt);
            }
        });

        UpdateUserNotice.setForeground(new java.awt.Color(144, 238, 144));
        UpdateUserNotice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UpdateUserNotice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/valid.png"))); // NOI18N
        UpdateUserNotice.setText("Sign-up successful! Redirecting to login page.");
        UpdateUserNotice.setMaximumSize(new java.awt.Dimension(38, 25));
        UpdateUserNotice.setMinimumSize(new java.awt.Dimension(38, 25));
        UpdateUserNotice.setPreferredSize(new java.awt.Dimension(38, 25));

        EmailLabel.setForeground(new java.awt.Color(166, 166, 166));
        EmailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmailLabel.setText("Email");

        PasswordLabel.setForeground(new java.awt.Color(166, 166, 166));
        PasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PasswordLabel.setText("Password");

        IDTextField.setFormatterFactory(new DefaultFormatterFactory(formatter));

        javax.swing.GroupLayout TaskDetailsPanelLayout = new javax.swing.GroupLayout(TaskDetailsPanel);
        TaskDetailsPanel.setLayout(TaskDetailsPanelLayout);
        TaskDetailsPanelLayout.setHorizontalGroup(
            TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TaskDetailsPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(UpdateUserNotice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TaskDetailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(UpdateUserButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TaskDetailsPanelLayout.createSequentialGroup()
                        .addGroup(TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(IDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EmailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EmailTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(PasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(17, 17, 17))
        );
        TaskDetailsPanelLayout.setVerticalGroup(
            TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaskDetailsPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDLabel)
                    .addComponent(EmailLabel)
                    .addComponent(PasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TaskDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(UpdateUserButton)
                .addGap(18, 18, 18)
                .addComponent(UpdateUserNotice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        UpdateUserNotice.setVisible(false);

        TasksPanelHeader.setBackground(new java.awt.Color(26, 36, 33));

        ExitButton.setBackground(new java.awt.Color(26, 36, 33));
        ExitButton.setForeground(new java.awt.Color(217, 217, 217));
        ExitButton.setText("âœ–");
        ExitButton.setBorderPainted(false);
        ExitButton.setFocusPainted(false);
        ExitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });

        FirstCircle.setBackground(new java.awt.Color(26, 36, 33));

        javax.swing.GroupLayout FirstCircleLayout = new javax.swing.GroupLayout(FirstCircle);
        FirstCircle.setLayout(FirstCircleLayout);
        FirstCircleLayout.setHorizontalGroup(
            FirstCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        FirstCircleLayout.setVerticalGroup(
            FirstCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        SecondCircle.setBackground(new java.awt.Color(26, 36, 33));

        javax.swing.GroupLayout SecondCircleLayout = new javax.swing.GroupLayout(SecondCircle);
        SecondCircle.setLayout(SecondCircleLayout);
        SecondCircleLayout.setHorizontalGroup(
            SecondCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        SecondCircleLayout.setVerticalGroup(
            SecondCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        ThirdCircle.setBackground(new java.awt.Color(26, 36, 33));

        javax.swing.GroupLayout ThirdCircleLayout = new javax.swing.GroupLayout(ThirdCircle);
        ThirdCircle.setLayout(ThirdCircleLayout);
        ThirdCircleLayout.setHorizontalGroup(
            ThirdCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );
        ThirdCircleLayout.setVerticalGroup(
            ThirdCircleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout TasksPanelHeaderLayout = new javax.swing.GroupLayout(TasksPanelHeader);
        TasksPanelHeader.setLayout(TasksPanelHeaderLayout);
        TasksPanelHeaderLayout.setHorizontalGroup(
            TasksPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TasksPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FirstCircle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SecondCircle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ThirdCircle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        TasksPanelHeaderLayout.setVerticalGroup(
            TasksPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TasksPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TasksPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstCircle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SecondCircle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ThirdCircle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout AddTasksContainerLayout = new javax.swing.GroupLayout(AddTasksContainer);
        AddTasksContainer.setLayout(AddTasksContainerLayout);
        AddTasksContainerLayout.setHorizontalGroup(
            AddTasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TasksPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddTasksContainerLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(TaskDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        AddTasksContainerLayout.setVerticalGroup(
            AddTasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddTasksContainerLayout.createSequentialGroup()
                .addComponent(TasksPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(TaskDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AddTasksContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AddTasksContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private String getEmail() {
        return EmailTextField.getText();
    }

    private String getPassword() {
        char[] passwordChars = PasswordField.getPassword();
        return new String(passwordChars);
    }

    private int getID() {
        return (Integer) IDTextField.getValue();
    }
    private void UpdateUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateUserButtonActionPerformed
        user.Authenticator authenticator = new user.Authenticator();
        user.SQLMethods method = new user.SQLMethods();
        int id = getID();
        System.out.println(id);
        System.out.println(authenticator.isIDAlreadyExists(id));
        String email = getEmail();
        String password = getPassword();
        
        if(authenticator.isIDAlreadyExists(id)){
            UpdateUserNotice.setText("ID already exists.");
            UpdateUserNotice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/invalid.png")));
            UpdateUserNotice.setForeground(new Color(255, 65, 95));
            UpdateUserNotice.setVisible(true);
        } else if(authenticator.isEmailAlreadyExists(email)){
            UpdateUserNotice.setText("Email already exists.");
            UpdateUserNotice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/invalid.png")));
            UpdateUserNotice.setForeground(new Color(255, 65, 95));
            UpdateUserNotice.setVisible(true);
        } else {
            UpdateUserNotice.setText("User updated successfully!");
            UpdateUserNotice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/valid.png")));
            UpdateUserNotice.setForeground(new Color(144, 238, 144));
            UpdateUserNotice.setVisible(true);
            method.updateUser(getUserID(), id, email, password);
            initializeTimer();
            redirectTimer.start();
        }
    }//GEN-LAST:event_UpdateUserButtonActionPerformed

    private void initializeTimer() {
        redirectTimer = new Timer(REDIRECT_DELAY, (ActionEvent e) -> {
            setVisible(false);
            dispose();
                
            UpdateUserNotice.setVisible(false);
            if(TasktifierGUI.Index.getAdminInstance() != null){
                TasktifierGUI.Index.getAdminInstance().dispose();
            }
            if(TasktifierGUI.Admin.getInstance() != null){
                TasktifierGUI.Admin.getInstance().dispose();
            }
            new customComponents.AdminFrameRefresher();
            redirectTimer.stop();
        });
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UpdateUser().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddTasksContainer;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JButton ExitButton;
    private javax.swing.JPanel FirstCircle;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JFormattedTextField IDTextField;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPanel SecondCircle;
    private javax.swing.JPanel TaskDetailsPanel;
    private javax.swing.JPanel TasksPanelHeader;
    private javax.swing.JPanel ThirdCircle;
    private javax.swing.JButton UpdateUserButton;
    private javax.swing.JLabel UpdateUserNotice;
    // End of variables declaration//GEN-END:variables
}
