/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TasktifierGUI;

/**
 *
 * @author Daniel
 */

<<<<<<< HEAD
=======
import com.formdev.flatlaf.FlatDarkLaf;
>>>>>>> main
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.text.*;
import java.sql.*;
import java.util.HashMap;

public class Signup extends javax.swing.JFrame {
    private final ImageIcon invalid = new ImageIcon("assets/images/invalid.png");
    private static boolean isValidPassword = false;
    private static boolean isValidConfirmPassword = false;
    private static boolean isValidEmail = false;
    private Timer redirectTimer;
    private static final int REDIRECT_DELAY = 3000;
<<<<<<< HEAD
    private static Signup instance;
=======
>>>>>>> main
    
    /**
     * Creates new form Signup
     */
<<<<<<< HEAD
    private Signup() {
=======
    public Signup() {
>>>>>>> main
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        setDefaultBorderToTextField(EmailTextField);
	setDefaultBorderToPasswordField(PasswordField);
	setDefaultBorderToPasswordField(ConfirmPasswordField);

	addFocusListenerToTextField(EmailTextField);
	addFocusListenerToPasswordField(PasswordField, ConfirmPasswordField);
        addFocusListenerToPasswordField(ConfirmPasswordField, PasswordField);
        
        FrameContainer.requestFocusInWindow();
        
        FrameContainer.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                FrameContainer.requestFocusInWindow();
            }
        });
        
        setupListeners();
        initializeTimer();
    }
<<<<<<< HEAD
    
    public static Signup getInstance() {
        if (instance == null) {
            instance = new Signup();
        }
        return instance;
    }
=======
>>>>>>> main

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FrameContainer = new javax.swing.JPanel();
        SignupForm = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();
        LogoTitle = new javax.swing.JLabel();
        LogoTextContainer = new javax.swing.JScrollPane();
        LogoText = new javax.swing.JTextPane();
        EmailLabel = new javax.swing.JLabel();
        EmailWarning = new javax.swing.JTextField();
        EmailTextField = new javax.swing.JTextField();
        EmailIconInvalid = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        ConfirmPasswordLabel = new javax.swing.JLabel();
        ConfirmPasswordField = new javax.swing.JPasswordField();
        SignupButton = new javax.swing.JButton();
        Separator = new javax.swing.JSeparator();
<<<<<<< HEAD
=======
        ChangePasswordHyperlink = new javax.swing.JLabel();
>>>>>>> main
        LoginLink = new javax.swing.JLabel();
        Nothing = new javax.swing.JTextField();
        ConfirmPasswordIconInvalid = new javax.swing.JLabel();
        ConfirmPasswordWarning = new javax.swing.JTextField();
        SignupCover = new javax.swing.JLabel();
        SuccessfulSignup = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setResizable(false);

        FrameContainer.setBackground(new java.awt.Color(39, 43, 48));

        SignupForm.setBackground(new java.awt.Color(39, 43, 48));

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/logotest.png"))); // NOI18N
        Logo.setText("jLabel1");

        LogoTitle.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        LogoTitle.setForeground(new java.awt.Color(236, 240, 243));
        LogoTitle.setText("Tasktifier");

        LogoTextContainer.setBorder(null);

        LogoText.setEditable(false);
        LogoText.setBackground(new java.awt.Color(38, 43, 48));
        LogoText.setBorder(null);
        LogoText.setForeground(new java.awt.Color(231, 235, 238));
        LogoText.setText("Struggling with productivity and finding it hard to manage your time? Join us and discover how our platform can help streamline your workflow. Sign up today!");
        LogoText.setToolTipText("");
        LogoText.setAutoscrolls(false);
        LogoText.setFocusTraversalPolicyProvider(true);
        LogoText.setFocusable(false);
        LogoTextContainer.setViewportView(LogoText);
        StyledDocument doc = LogoText.getStyledDocument();

        SimpleAttributeSet center = new SimpleAttributeSet();
        StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, doc.getLength(), center, false);

        int verticalOffset = 20;
        SimpleAttributeSet verticalAlign = new SimpleAttributeSet();
        doc.setParagraphAttributes(0, doc.getLength(), verticalAlign, false);

        EmailLabel.setBackground(new java.awt.Color(38, 43, 48));
        EmailLabel.setForeground(new java.awt.Color(160, 160, 160));
        EmailLabel.setText("Email");

        EmailWarning.setBackground(new java.awt.Color(39, 43, 48));
        EmailWarning.setForeground(new java.awt.Color(255, 65, 95));
        EmailWarning.setBorder(null);
        EmailWarning.setFocusable(false);

        EmailTextField.setBackground(new java.awt.Color(39, 43, 48));
        EmailTextField.setFont(new java.awt.Font("MS PGothic", 0, 18)); // NOI18N
        EmailTextField.setForeground(new java.awt.Color(255, 255, 255));
        EmailTextField.setToolTipText("");
        EmailTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 0, true));
        EmailTextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        EmailTextField.setMargin(new java.awt.Insets(2, 6, 0, 6));
        EmailTextField.setSelectedTextColor(new java.awt.Color(0, 0, 0));

        EmailIconInvalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/invalid.png"))); // NOI18N

        PasswordLabel.setBackground(new java.awt.Color(38, 43, 48));
        PasswordLabel.setForeground(new java.awt.Color(160, 160, 160));
        PasswordLabel.setText("Password");

        PasswordField.setBackground(new java.awt.Color(39, 43, 48));
        PasswordField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        PasswordField.setForeground(new java.awt.Color(255, 255, 255));
        PasswordField.setBorder(null);
        PasswordField.setMargin(new java.awt.Insets(2, 6, 2, 0));

        ConfirmPasswordLabel.setBackground(new java.awt.Color(38, 43, 48));
        ConfirmPasswordLabel.setForeground(new java.awt.Color(160, 160, 160));
        ConfirmPasswordLabel.setText("Confirm Password");

        ConfirmPasswordField.setBackground(new java.awt.Color(39, 43, 48));
        ConfirmPasswordField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ConfirmPasswordField.setForeground(new java.awt.Color(255, 255, 255));
        ConfirmPasswordField.setBorder(null);
        ConfirmPasswordField.setMargin(new java.awt.Insets(2, 6, 2, 0));

        SignupButton.setForeground(new java.awt.Color(255, 255, 255));
        SignupButton.setText("Sign Up");
<<<<<<< HEAD
        SignupButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
=======

        ChangePasswordHyperlink.setBackground(new java.awt.Color(38, 43, 48));
        ChangePasswordHyperlink.setForeground(new java.awt.Color(160, 160, 160));
        ChangePasswordHyperlink.setText("Forgot Password?");
>>>>>>> main

        LoginLink.setBackground(new java.awt.Color(38, 43, 48));
        LoginLink.setForeground(new java.awt.Color(160, 160, 160));
        LoginLink.setText("Already have an account?");
        LoginLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        Nothing.setBackground(new java.awt.Color(39, 43, 48));
        Nothing.setForeground(new java.awt.Color(255, 65, 95));
        Nothing.setBorder(null);
        Nothing.setFocusable(false);

        ConfirmPasswordIconInvalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/invalid.png"))); // NOI18N

        ConfirmPasswordWarning.setBackground(new java.awt.Color(39, 43, 48));
        ConfirmPasswordWarning.setForeground(new java.awt.Color(255, 65, 95));
        ConfirmPasswordWarning.setBorder(null);
        ConfirmPasswordWarning.setFocusable(false);

        javax.swing.GroupLayout SignupFormLayout = new javax.swing.GroupLayout(SignupForm);
        SignupForm.setLayout(SignupFormLayout);
        SignupFormLayout.setHorizontalGroup(
            SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignupFormLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogoTextContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SignupFormLayout.createSequentialGroup()
                        .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(LogoTitle)))
                .addContainerGap(73, Short.MAX_VALUE))
            .addGroup(SignupFormLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignupFormLayout.createSequentialGroup()
                        .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Separator, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SignupButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(54, 54, 54))
<<<<<<< HEAD
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignupFormLayout.createSequentialGroup()
                        .addComponent(EmailIconInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmailWarning))
=======
>>>>>>> main
                    .addGroup(SignupFormLayout.createSequentialGroup()
                        .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConfirmPasswordLabel)
                            .addComponent(PasswordLabel)
<<<<<<< HEAD
                            .addComponent(ConfirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailLabel)
                            .addGroup(SignupFormLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(Nothing, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
=======
                            .addComponent(ConfirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(SignupFormLayout.createSequentialGroup()
                        .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EmailLabel)
                            .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(SignupFormLayout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addComponent(Nothing, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE))
                                .addGroup(SignupFormLayout.createSequentialGroup()
                                    .addComponent(EmailIconInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(EmailWarning))
                                .addComponent(EmailTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
>>>>>>> main
                            .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(SignupFormLayout.createSequentialGroup()
                                    .addComponent(ConfirmPasswordIconInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ConfirmPasswordWarning))
                                .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
<<<<<<< HEAD
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignupFormLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoginLink)
                .addGap(129, 129, 129))
=======
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignupFormLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignupFormLayout.createSequentialGroup()
                        .addComponent(ChangePasswordHyperlink)
                        .addGap(151, 151, 151))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignupFormLayout.createSequentialGroup()
                        .addComponent(LoginLink)
                        .addGap(130, 130, 130))))
>>>>>>> main
        );
        SignupFormLayout.setVerticalGroup(
            SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignupFormLayout.createSequentialGroup()
                .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignupFormLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SignupFormLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(LogoTitle)))
                .addGap(18, 18, 18)
                .addComponent(LogoTextContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(EmailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmailWarning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailIconInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Nothing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ConfirmPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ConfirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignupFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConfirmPasswordWarning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConfirmPasswordIconInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(SignupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
<<<<<<< HEAD
                .addComponent(LoginLink)
                .addGap(106, 106, 106))
=======
                .addComponent(ChangePasswordHyperlink)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoginLink)
                .addGap(84, 84, 84))
>>>>>>> main
        );

        EmailIconInvalid.setVisible(false);
        LoginLink.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                loginLinkMouseClicked();
            }
        });
        ConfirmPasswordIconInvalid.setVisible(false);

        SignupCover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/sign_up.png"))); // NOI18N

        SuccessfulSignup.setForeground(new java.awt.Color(144, 238, 144));
        SuccessfulSignup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/valid.png"))); // NOI18N
        SuccessfulSignup.setText("Sign-up successful! Redirecting to login page.");
        SuccessfulSignup.setMaximumSize(new java.awt.Dimension(38, 25));
        SuccessfulSignup.setMinimumSize(new java.awt.Dimension(38, 25));
        SuccessfulSignup.setPreferredSize(new java.awt.Dimension(38, 25));

        javax.swing.GroupLayout FrameContainerLayout = new javax.swing.GroupLayout(FrameContainer);
        FrameContainer.setLayout(FrameContainerLayout);
        FrameContainerLayout.setHorizontalGroup(
            FrameContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameContainerLayout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addGroup(FrameContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameContainerLayout.createSequentialGroup()
                        .addComponent(SignupCover, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameContainerLayout.createSequentialGroup()
                        .addComponent(SuccessfulSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)))
                .addComponent(SignupForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        FrameContainerLayout.setVerticalGroup(
            FrameContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameContainerLayout.createSequentialGroup()
                .addGroup(FrameContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FrameContainerLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(SignupForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FrameContainerLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(SignupCover, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SuccessfulSignup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        SuccessfulSignup.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FrameContainer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(FrameContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void addFocusListenerToPasswordField(JPasswordField passwordField, JPasswordField confirmPasswordField) {
        passwordField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.YELLOW));
            }

            @Override
            public void focusLost(FocusEvent e) {
                char[] passwordCharacters = passwordField.getPassword();
                char[] confirmPasswordCharacters = confirmPasswordField.getPassword();

                isValidPassword = passwordCharacters.length >= 8;
                isValidConfirmPassword = confirmPasswordCharacters.length >= 8;

                if (isValidPassword && isValidConfirmPassword) {
                    passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE));
                    confirmPasswordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE));
                    ConfirmPasswordWarning.setText("");
                    ConfirmPasswordIconInvalid.setVisible(false);
                    String password = new String(passwordCharacters);
                    String confirmPassword = new String(confirmPasswordCharacters);

                    if (password.equals(confirmPassword)) {
                        passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.GREEN));
                        confirmPasswordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.GREEN));
                        ConfirmPasswordIconInvalid.setVisible(false);
                        ConfirmPasswordWarning.setText("");
                    } else {
                        passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.RED));
                        confirmPasswordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.RED));
                        ConfirmPasswordIconInvalid.setVisible(true);
                        ConfirmPasswordWarning.setText("Passwords don't match. Please try again.");
                    }
                } else if(passwordCharacters.length == 0 && confirmPasswordCharacters.length == 0){
                    passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE));
                    confirmPasswordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE));
                    ConfirmPasswordIconInvalid.setVisible(false);
                    ConfirmPasswordWarning.setText("");
                } else {
                    passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.RED));
                    confirmPasswordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.RED));
                    ConfirmPasswordWarning.setText("Both password must be at least 8 characters.");
                    ConfirmPasswordIconInvalid.setVisible(true);
                } 
            }
        });
    }

    private void addFocusListenerToTextField(JTextField textField) {
        textField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                EmailIconInvalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/invalid.png")));
                textField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.YELLOW));
                EmailIconInvalid.setVisible(false);
                EmailWarning.setForeground(new java.awt.Color(255, 65, 95));
                EmailWarning.setText("");
            }

            @Override
            public void focusLost(FocusEvent e) {
                EmailIconInvalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/invalid.png")));
                EmailWarning.setForeground(new java.awt.Color(255, 65, 95));
                isValidEmail = false;
                String text = EmailTextField.getText();
                if(text.isEmpty()){
                    textField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE));
                    EmailIconInvalid.setVisible(false);
                    EmailWarning.setText("");
                    isValidEmail = false;
                } else {
                    if(text.indexOf('@') < text.indexOf('.') &&
                       text.indexOf('@') + 1 < text.indexOf('.') &&
                       text.matches(".*[a-zA-Z0-9]@.*[a-zA-Z0-9]\\..*[a-zA-Z0-9]")){
                        textField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.GREEN));
                        EmailIconInvalid.setVisible(false);
                        EmailWarning.setText("");
                        isValidEmail = true;
                    } else {
                        textField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.RED));
                        EmailIconInvalid.setVisible(true);
                        EmailWarning.setText("Invalid email");
                        isValidEmail = false;
                    }
                }
            }
        });
    }

    private void setDefaultBorderToTextField(JTextField textField) {
        textField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE));
    }
    
    private void setDefaultBorderToPasswordField(JPasswordField passwordField) {
        passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.WHITE));
    }
    
    private void initializeTimer() {
        redirectTimer = new Timer(REDIRECT_DELAY, (ActionEvent e) -> {
            setVisible(false);
            dispose();
            
<<<<<<< HEAD
            Login login = Login.getInstance();
=======
            Login login = new Login();
>>>>>>> main
            SwingUtilities.invokeLater(() -> {
                login.setVisible(true);
            });
            redirectTimer.stop();
        });
    }
    
    private boolean isEmailAlreadyExists(String email) {
        try {
<<<<<<< HEAD
            user.SQLMethods sqlMethods = new user.SQLMethods();
            Connection connection = sqlMethods.getConnection();
=======
            Connection connection = SQLMethods.getConnection();
>>>>>>> main
            String sql = "SELECT COUNT(*) FROM users WHERE email = ?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, email);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    resultSet.next();
                    return resultSet.getInt(1) > 0;
                }
            }
        } catch (SQLException ex) {
            return true;
        }
    }
    
    private void setupListeners() {
        SignupButton.addActionListener((ActionEvent e) -> {
            String email = EmailTextField.getText();
            char[] passwordCharacters = PasswordField.getPassword();
            char[] confirmPasswordCharacters = ConfirmPasswordField.getPassword();
            String password = new String(passwordCharacters);
            String confirmPassword = new String(confirmPasswordCharacters);

            if (isValidEmail && isValidPassword && isValidConfirmPassword && password.equals(confirmPassword)) {
                if (isEmailAlreadyExists(email)) {
                    EmailIconInvalid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TasktifierGUI/assets/images/warning.png")));
                    EmailWarning.setText("Email already exists! Try to login using this email.");
                    EmailWarning.setForeground(new java.awt.Color(255, 255, 0));
                    EmailIconInvalid.setVisible(true);
                } else {
<<<<<<< HEAD
                    user.SQLMethods sqlMethods = new user.SQLMethods();
=======
>>>>>>> main
                    HashMap<String, String> userData = new HashMap<>();
                    userData.put("email", email);
                    userData.put("password", password);
                
<<<<<<< HEAD
                    sqlMethods.createUser(userData);
=======
                    SQLMethods.create(userData);
>>>>>>> main
                    System.out.println("New user inserted successfully!");
                    SuccessfulSignup.setVisible(true);
                    redirectTimer.start();
                }
            }
        });
    }
    
    private void loginLinkMouseClicked() {
        setVisible(false);
        dispose();

<<<<<<< HEAD
        Login login = Login.getInstance();
=======
        Login login = new Login();
>>>>>>> main
        SwingUtilities.invokeLater(() -> {
            login.setVisible(true);
        });
    }
    
       /**
     * @param args the command line arguments
     */
<<<<<<< HEAD
    // Variables declaration - do not modify//GEN-BEGIN:variables
=======
    public static void main(String args[]) {
        try{
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException e){}

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Signup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChangePasswordHyperlink;
>>>>>>> main
    private javax.swing.JPasswordField ConfirmPasswordField;
    private javax.swing.JLabel ConfirmPasswordIconInvalid;
    private javax.swing.JLabel ConfirmPasswordLabel;
    private javax.swing.JTextField ConfirmPasswordWarning;
    private javax.swing.JLabel EmailIconInvalid;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JTextField EmailWarning;
    private javax.swing.JPanel FrameContainer;
    private javax.swing.JLabel LoginLink;
    private javax.swing.JLabel Logo;
    private javax.swing.JTextPane LogoText;
    private javax.swing.JScrollPane LogoTextContainer;
    private javax.swing.JLabel LogoTitle;
    private javax.swing.JTextField Nothing;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JSeparator Separator;
    private javax.swing.JButton SignupButton;
    private javax.swing.JLabel SignupCover;
    private javax.swing.JPanel SignupForm;
    private javax.swing.JLabel SuccessfulSignup;
    // End of variables declaration//GEN-END:variables
}
